package ia54.project.taquin

import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.ExternalContextAccess
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Schedules
//import ia54.project.taquin.PuzzleConstant
import io.sarl.util.OpenEventSpace
import io.sarl.util.OpenEventSpaceSpecification
import java.util.Random
import java.util.Collection
import io.sarl.lang.util.SynchronizedSet
import java.util.UUID
import io.sarl.lang.core.Space
import java.util.List
import java.util.ArrayList
import io.sarl.lang.core.EventSpace
import io.sarl.lang.core.EventSpaceSpecification

agent ActiveTile {
    uses Lifecycle, Schedules, DefaultContextInteractions, ExternalContextAccess, Behaviors
    var placementNumber : Integer
    var tileSquareSpace : OpenEventSpace
    var isSatisfed : Boolean
     
    //on wich square Active tile is

    on Initialize {
    //get the number from parameters
        placementNumber = occurrence.parameters.get(0) as Integer

        //get the space from parameters
        tileSquareSpace = defaultContext.getOrCreateSpace(typeof(OpenEventSpaceSpecification),
        occurrence.parameters.get(1) as UUID)
        tileSquareSpace.register(asEventListener()) 
        
        isSatisfed = false

        println("Active tile spawned with number" + placementNumber)
    }
    
    on SearchSatisfaction{ 
//    	var squareNb : Integer
    	var evt = new AskMySquareNumber() //define the event
		evt.source = tileSquareSpace.getAddress(getID()) //define source 
		tileSquareSpace.emit(evt) //emit the event in the space
//		emit(new AskMySquareNumber(), Scopes.addresses(space))
    }
    
    on SendMySquareNumber{
    	println("From square number" + occurrence.squareNumber) 
    }

}

agent BlankTile {
    uses Lifecycle, Schedules, DefaultContextInteractions, ExternalContextAccess, Behaviors
    var space : OpenEventSpace

    on Initialize {
        space = defaultContext.getOrCreateSpace(typeof(OpenEventSpaceSpecification),
        occurrence.parameters.get(0) as UUID)
        space.register(asEventListener())

        println("Blank tile spawned")
    }
    
}